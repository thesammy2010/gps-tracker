name: "Test"

on:
  - "push"

jobs:
  unit:
    name: "test (unit)"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"
      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install -r scripts/requirements-dev.txt
      - name: "test"
        run: "pytest --verbose"
  integration:
    name: "test (integration)"
    timeout-minutes: 10
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"
      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install -r scripts/requirements-dev.txt
      - name: "Login to Docker Hub"
        uses: "docker/login-action@v1"
        with:
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"

      - name: "Start containers"
        run: "docker-compose -f 'docker-compose.yml' up -d --build"
      - name: "Test"
        run: "pytest --verbose -m integration"
      - name: "Stop containers"
        if: "always()"
        run: "docker-compose -f 'docker-compose.yml' down"
